{
  "contractName": "Passport",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "destroyAndSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousRegistry",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newRegistry",
          "type": "address"
        }
      ],
      "name": "PassportLogicRegistryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPassportLogicRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610cef8339810180604052810190808051906020019092919050505060405180807f6f72672e6d6f6e657468612e70726f78792e706175736564000000000000000081525060180190506040518091039020600019167f9e7945c55c116aa3404b99fe56db7af9613d3b899554a437c2616a4749a94d8a6001026000191614151561009e57fe5b60405180807f6f72672e6d6f6e657468612e70726f78792e6f776e657200000000000000000081525060170190506040518091039020600019167f3ca57e4b51fc2e18497b219410298879868edada7e6fe5132c8feceb0a080d226001026000191614151561010957fe5b6101213361023b640100000000026401000000009004565b60405180807f6f72672e6d6f6e657468612e70726f78792e70656e64696e674f776e65720000815250601e0190506040518091039020600019167fcfd0c6ea5352192d7d4c5d4e7a73c5da12c871730cb60ff57879cbe7b403bb526001026000191614151561018c57fe5b60405180807f6f72672e6d6f6e657468612e70617373706f72742e70726f78792e726567697381526020017f747279000000000000000000000000000000000000000000000000000000000081525060230190506040518091039020600019167fa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a6001026000191614151561021d57fe5b6102358161026a640100000000026401000000009004565b5061034d565b60007f3ca57e4b51fc2e18497b219410298879868edada7e6fe5132c8feceb0a080d2260010290508181555050565b6000808273ffffffffffffffffffffffffffffffffffffffff1614151515610320576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f43616e6e6f742073657420726567697374727920746f2061207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b7fa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a60010290508181555050565b6109938061035c6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634e71e0c8146100a0578063715018a6146100b757806383197ef0146100ce57806386d5c5f9146100e55780638da5cb5b1461013c578063e30c397814610193578063f2fde38b146101ea578063f5074f411461022d575b61009e610099610270565b61031d565b005b3480156100ac57600080fd5b506100b5610343565b005b3480156100c357600080fd5b506100cc610485565b005b3480156100da57600080fd5b506100e3610599565b005b3480156100f157600080fd5b506100fa610677565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014857600080fd5b50610151610686565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019f57600080fd5b506101a8610695565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f657600080fd5b5061022b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a4565b005b34801561023957600080fd5b5061026e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061076e565b005b600061027a610845565b73ffffffffffffffffffffffffffffffffffffffff1663609725ef6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156102dd57600080fd5b505af11580156102f1573d6000803e3d6000fd5b505050506040513d602081101561030757600080fd5b8101908080519060200190929190505050905090565b3660008037600080366000845af43d6000803e806000811461033e573d6000f35b3d6000fd5b61034b610876565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561038457600080fd5b61038c6108a7565b151515610401576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b610409610876565b73ffffffffffffffffffffffffffffffffffffffff166104276108d8565b73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610479610474610876565b610909565b6104836000610938565b565b61048d6108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c657600080fd5b6104ce6108a7565b151515610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b61054b6108d8565b73ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26105976000610909565b565b6105a16108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105da57600080fd5b6105e26108a7565b151515610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b61065f6108d8565b73ffffffffffffffffffffffffffffffffffffffff16ff5b6000610681610845565b905090565b60006106906108d8565b905090565b600061069f610876565b905090565b6106ac6108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106e557600080fd5b6106ed6108a7565b151515610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b61076b81610938565b50565b6107766108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107af57600080fd5b6107b76108a7565b15151561082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6000807fa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a6001029050805491505090565b6000807fcfd0c6ea5352192d7d4c5d4e7a73c5da12c871730cb60ff57879cbe7b403bb526001029050805491505090565b6000807f9e7945c55c116aa3404b99fe56db7af9613d3b899554a437c2616a4749a94d8a6001029050805491505090565b6000807f3ca57e4b51fc2e18497b219410298879868edada7e6fe5132c8feceb0a080d226001029050805491505090565b60007f3ca57e4b51fc2e18497b219410298879868edada7e6fe5132c8feceb0a080d2260010290508181555050565b60007fcfd0c6ea5352192d7d4c5d4e7a73c5da12c871730cb60ff57879cbe7b403bb52600102905081815550505600a165627a7a72305820f08ef5d8a99b6400d98af9db059e60b4c054bbc5f5b5c41ca8909621c6da47720029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634e71e0c8146100a0578063715018a6146100b757806383197ef0146100ce57806386d5c5f9146100e55780638da5cb5b1461013c578063e30c397814610193578063f2fde38b146101ea578063f5074f411461022d575b61009e610099610270565b61031d565b005b3480156100ac57600080fd5b506100b5610343565b005b3480156100c357600080fd5b506100cc610485565b005b3480156100da57600080fd5b506100e3610599565b005b3480156100f157600080fd5b506100fa610677565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014857600080fd5b50610151610686565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019f57600080fd5b506101a8610695565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f657600080fd5b5061022b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a4565b005b34801561023957600080fd5b5061026e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061076e565b005b600061027a610845565b73ffffffffffffffffffffffffffffffffffffffff1663609725ef6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156102dd57600080fd5b505af11580156102f1573d6000803e3d6000fd5b505050506040513d602081101561030757600080fd5b8101908080519060200190929190505050905090565b3660008037600080366000845af43d6000803e806000811461033e573d6000f35b3d6000fd5b61034b610876565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561038457600080fd5b61038c6108a7565b151515610401576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b610409610876565b73ffffffffffffffffffffffffffffffffffffffff166104276108d8565b73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610479610474610876565b610909565b6104836000610938565b565b61048d6108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c657600080fd5b6104ce6108a7565b151515610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b61054b6108d8565b73ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26105976000610909565b565b6105a16108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105da57600080fd5b6105e26108a7565b151515610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b61065f6108d8565b73ffffffffffffffffffffffffffffffffffffffff16ff5b6000610681610845565b905090565b60006106906108d8565b905090565b600061069f610876565b905090565b6106ac6108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106e557600080fd5b6106ed6108a7565b151515610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b61076b81610938565b50565b6107766108d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107af57600080fd5b6107b76108a7565b15151561082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f636f6e74726163742073686f756c64206e6f742062652070617573656400000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6000807fa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a6001029050805491505090565b6000807fcfd0c6ea5352192d7d4c5d4e7a73c5da12c871730cb60ff57879cbe7b403bb526001029050805491505090565b6000807f9e7945c55c116aa3404b99fe56db7af9613d3b899554a437c2616a4749a94d8a6001029050805491505090565b6000807f3ca57e4b51fc2e18497b219410298879868edada7e6fe5132c8feceb0a080d226001029050805491505090565b60007f3ca57e4b51fc2e18497b219410298879868edada7e6fe5132c8feceb0a080d2260010290508181555050565b60007fcfd0c6ea5352192d7d4c5d4e7a73c5da12c871730cb60ff57879cbe7b403bb52600102905081815550505600a165627a7a72305820f08ef5d8a99b6400d98af9db059e60b4c054bbc5f5b5c41ca8909621c6da47720029",
  "sourceMap": "215:1979:3:-;;;884:177;8:9:-1;5:2;;;30:1;27;20:12;5:2;884:177:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:37:8;;;;;;;;;;;;;;;;;;;617:58;;;408:66;617:17;;:58;;;;610:66;;;;;;791:36:53;;;;;;;;;;;;;;;;;;;777:50;;;537:66;777:10;;:50;;;;770:58;;;;;;839:21;849:10;839:9;;;:21;;;:::i;:::-;752:43:52;;;;;;;;;;;;;;;;;;;730:65;;;521:66;730:18;;:65;;;;723:73;;;;;;971:48:3;;;;;;;;;;;;;;;;;;;;;;;;954:65;;;687:66;954:13;;:65;;;;947:73;;;;;;1031:23;1044:9;1031:12;;;:23;;;:::i;:::-;884:177;215:1979;;2574:155:53;2631:12;537:66;2646:10;;2631:25;;2703:9;2697:4;2690:23;2676:47;;:::o;1931:261:3:-;2092:12;2036:3;2022:9;2014:25;;;;2006:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:66;2107:13;;2092:28;;2166:9;2160:4;2153:23;2139:47;;:::o;215:1979::-;;;;;;;",
  "deployedSourceMap": "215:1979:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:28:64;478:17;:15;:17::i;:::-;468:9;:28::i;:::-;215:1979:3;1470:216:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1470:216:52;;;;;;1316:144:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1316:144:53;;;;;;350:92:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:92:7;;;;;;1138:104:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1138:104:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:82:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2150:82:53;;;;;;;;;;;;;;;;;;;;;;;;;;;809:96:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;809:96:52;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:119:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:116:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:116:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:123:3;1530:7;1556:14;:12;:14::i;:::-;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1556:40:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1556:40:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1556:40:3;;;;;;;;;;;;;;;;1549:47;;1480:123;:::o;934:795:64:-;1252:12;1249:1;1246;1233:32;1452:1;1449;1435:12;1432:1;1416:14;1411:3;1398:56;1524:14;1521:1;1518;1503:36;1560:6;1632:1;1627:36;;;;1696:14;1693:1;1686:25;1627:36;1646:14;1643:1;1636:25;1470:216:52;1069:18;:16;:18::i;:::-;1055:32;;:10;:32;;;1047:41;;;;;;;;836:12:8;:10;:12::i;:::-;835:13;827:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1583:18:52;:16;:18::i;:::-;1549:53;;1570:11;:9;:11::i;:::-;1549:53;;;;;;;;;;;;1612:29;1622:18;:16;:18::i;:::-;1612:9;:29::i;:::-;1651:28;1676:1;1651:16;:28::i;:::-;1470:216::o;1316:144:53:-;1008:11;:9;:11::i;:::-;994:25;;:10;:25;;;986:34;;;;;;;;836:12:8;:10;:12::i;:::-;835:13;827:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:11:53;:9;:11::i;:::-;1391:31;;;;;;;;;;;;1432:21;1450:1;1432:9;:21::i;:::-;1316:144::o;350:92:7:-;1008:11:53;:9;:11::i;:::-;994:25;;:10;:25;;;986:34;;;;;;;;836:12:8;:10;:12::i;:::-;835:13;827:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:11:7;:9;:11::i;:::-;410:25;;;1138:104:3;1195:7;1221:14;:12;:14::i;:::-;1214:21;;1138:104;:::o;2150:82:53:-;2188:7;2214:11;:9;:11::i;:::-;2207:18;;2150:82;:::o;809:96:52:-;854:7;880:18;:16;:18::i;:::-;873:25;;809:96;:::o;1259:119::-;1008:11:53;:9;:11::i;:::-;994:25;;:10;:25;;;986:34;;;;;;;;836:12:8;:10;:12::i;:::-;835:13;827:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:26:52;1362:8;1345:16;:26::i;:::-;1259:119;:::o;448:116:7:-;1008:11:53;:9;:11::i;:::-;994:25;;:10;:25;;;986:34;;;;;;;;836:12:8;:10;:12::i;:::-;835:13;827:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:10:7;533:24;;;1745:180:3;1792:26;1830:12;687:66;1845:13;;1830:28;;1904:4;1898:11;1891:18;;1877:42;;:::o;1750:180:52:-;1801:14;1827:12;521:66;1842:18;;1827:33;;1909:4;1903:11;1893:21;;1879:45;;:::o;1176:170:8:-;1221:11;1244:12;408:66;1259:17;;1244:32;;1325:4;1319:11;1309:21;;1295:45;;:::o;2288:159:53:-;2332:11;2355:12;537:66;2370:10;;2355:25;;2426:4;2420:11;2413:18;;2399:42;;:::o;2574:155::-;2631:12;537:66;2646:10;;2631:25;;2703:9;2697:4;2690:23;2676:47;;:::o;2068:184:52:-;2139:12;521:66;2154:18;;2139:33;;2219:16;2213:4;2206:30;2192:54;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ownership/ClaimableProxy.sol\";\nimport \"./lifecycle/DestructibleProxy.sol\";\nimport \"./IPassportLogicRegistry.sol\";\nimport \"./upgradeability/Proxy.sol\";\n\n/**\n * @title Passport\n */\ncontract Passport is Proxy, ClaimableProxy, DestructibleProxy {\n\n    event PassportLogicRegistryChanged(\n        address indexed previousRegistry,\n        address indexed newRegistry\n    );\n\n    /**\n     * @dev Storage slot with the address of the current registry of the passport implementations.\n     * This is the keccak-256 hash of \"org.monetha.passport.proxy.registry\", and is\n     * validated in the constructor.\n     */\n    bytes32 private constant REGISTRY_SLOT = 0xa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a;\n\n    /**\n     * @dev Contract constructor.\n     * @param _registry Address of the passport implementations registry.\n     */\n    constructor(IPassportLogicRegistry _registry) public {\n        assert(REGISTRY_SLOT == keccak256(\"org.monetha.passport.proxy.registry\"));\n\n        _setRegistry(_registry);\n    }\n\n    /**\n     * @return the address of passport logic registry.\n     */\n    function getPassportLogicRegistry() public view returns (address) {\n        return _getRegistry();\n    }\n\n    /**\n     * @dev Returns the current passport logic implementation (used in Proxy fallback function to delegate call\n     * to passport logic implementation).\n     * @return Address of the current passport implementation\n     */\n    function _implementation() internal view returns (address) {\n        return _getRegistry().getCurrentPassportLogic();\n    }\n\n    /**\n     * @dev Returns the current passport implementations registry.\n     * @return Address of the current implementation\n     */\n    function _getRegistry() internal view returns (IPassportLogicRegistry reg) {\n        bytes32 slot = REGISTRY_SLOT;\n        assembly {\n            reg := sload(slot)\n        }\n    }\n\n    function _setRegistry(IPassportLogicRegistry _registry) internal {\n        require(address(_registry) != 0x0, \"Cannot set registry to a zero address\");\n\n        bytes32 slot = REGISTRY_SLOT;\n        assembly {\n            sstore(slot, _registry)\n        }\n    }\n}",
  "sourcePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/Passport.sol",
  "ast": {
    "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/Passport.sol",
    "exportedSymbols": {
      "Passport": [
        371
      ]
    },
    "id": 372,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 282,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/ownership/ClaimableProxy.sol",
        "file": "./ownership/ClaimableProxy.sol",
        "id": 283,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 4172,
        "src": "26:40:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/lifecycle/DestructibleProxy.sol",
        "file": "./lifecycle/DestructibleProxy.sol",
        "id": 284,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 709,
        "src": "67:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/IPassportLogicRegistry.sol",
        "file": "./IPassportLogicRegistry.sol",
        "id": 285,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 224,
        "src": "111:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/upgradeability/Proxy.sol",
        "file": "./upgradeability/Proxy.sol",
        "id": 286,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 6363,
        "src": "150:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 287,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6362,
              "src": "236:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$6362",
                "typeString": "contract Proxy"
              }
            },
            "id": 288,
            "nodeType": "InheritanceSpecifier",
            "src": "236:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 289,
              "name": "ClaimableProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4171,
              "src": "243:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimableProxy_$4171",
                "typeString": "contract ClaimableProxy"
              }
            },
            "id": 290,
            "nodeType": "InheritanceSpecifier",
            "src": "243:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 291,
              "name": "DestructibleProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 708,
              "src": "259:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DestructibleProxy_$708",
                "typeString": "contract DestructibleProxy"
              }
            },
            "id": 292,
            "nodeType": "InheritanceSpecifier",
            "src": "259:17:3"
          }
        ],
        "contractDependencies": [
          708,
          769,
          4171,
          4307,
          6362
        ],
        "contractKind": "contract",
        "documentation": "@title Passport",
        "fullyImplemented": true,
        "id": 371,
        "linearizedBaseContracts": [
          371,
          708,
          4171,
          4307,
          769,
          6362
        ],
        "name": "Passport",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 298,
            "name": "PassportLogicRegistryChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "indexed": true,
                  "name": "previousRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "328:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "indexed": true,
                  "name": "newRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "370:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:85:3"
            },
            "src": "284:120:3"
          },
          {
            "constant": true,
            "id": 301,
            "name": "REGISTRY_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 371,
            "src": "646:107:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 299,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307861303462616236396534356165623463393461373862613562633162653637656632383937376334666466383135613330623832396137393465623637613461",
              "id": 300,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "687:66:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_72503752356649306665791338292725140274549562385946020229019822058611334871626_by_1",
                "typeString": "int_const 7250...(69 digits omitted)...1626"
              },
              "value": "0xa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "937:124:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "REGISTRY_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "954:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6f72672e6d6f6e657468612e70617373706f72742e70726f78792e7265676973747279",
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "981:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a",
                                "typeString": "literal_string \"org.monetha.passport.proxy.registry\""
                              },
                              "value": "org.monetha.passport.proxy.registry"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a",
                                "typeString": "literal_string \"org.monetha.passport.proxy.registry\""
                              }
                            ],
                            "id": 308,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6371,
                            "src": "971:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "971:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "954:65:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 306,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6366,
                      "src": "947:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "947:73:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "1044:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                          "typeString": "contract IPassportLogicRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                          "typeString": "contract IPassportLogicRegistry"
                        }
                      ],
                      "id": 314,
                      "name": "_setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "1031:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPassportLogicRegistry_$223_$returns$__$",
                        "typeString": "function (contract IPassportLogicRegistry)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:23:3"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@param _registry Address of the passport implementations registry.",
            "id": 319,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "896:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                    "typeString": "contract IPassportLogicRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 302,
                    "name": "IPassportLogicRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 223,
                    "src": "896:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "895:34:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "937:0:3"
            },
            "scope": 371,
            "src": "884:177:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "1204:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 324,
                      "name": "_getRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "1221:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPassportLogicRegistry_$223_$",
                        "typeString": "function () view returns (contract IPassportLogicRegistry)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "functionReturnParameters": 323,
                  "id": 326,
                  "nodeType": "Return",
                  "src": "1214:21:3"
                }
              ]
            },
            "documentation": "@return the address of passport logic registry.",
            "id": 328,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPassportLogicRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "1195:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1194:9:3"
            },
            "scope": 371,
            "src": "1138:104:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "1539:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 333,
                          "name": "_getRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "1556:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPassportLogicRegistry_$223_$",
                            "typeString": "function () view returns (contract IPassportLogicRegistry)"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1556:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                          "typeString": "contract IPassportLogicRegistry"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentPassportLogic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 222,
                      "src": "1556:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 332,
                  "id": 337,
                  "nodeType": "Return",
                  "src": "1549:47:3"
                }
              ]
            },
            "documentation": "@dev Returns the current passport logic implementation (used in Proxy fallback function to delegate call\nto passport logic implementation).\n@return Address of the current passport implementation",
            "id": 339,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "1530:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1529:9:3"
            },
            "scope": 371,
            "src": "1480:123:3",
            "stateMutability": "view",
            "superFunction": 6354,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "1820:105:3",
              "statements": [
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 350,
                      "src": "1830:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1830:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 346,
                    "name": "REGISTRY_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "1845:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1830:28:3"
                },
                {
                  "externalReferences": [
                    {
                      "reg": {
                        "declaration": 342,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1891:3:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 345,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1904:4:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 348,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    reg := sload(slot)\n}",
                  "src": "1868:57:3"
                }
              ]
            },
            "documentation": "@dev Returns the current passport implementations registry.\n@return Address of the current implementation",
            "id": 350,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "reg",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1792:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                    "typeString": "contract IPassportLogicRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 341,
                    "name": "IPassportLogicRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 223,
                    "src": "1792:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1791:28:3"
            },
            "scope": 371,
            "src": "1745:180:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "1996:196:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 357,
                              "name": "_registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "2022:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                                "typeString": "contract IPassportLogicRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                                "typeString": "contract IPassportLogicRegistry"
                              }
                            ],
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2014:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2014:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2036:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "2014:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f742073657420726567697374727920746f2061207a65726f2061646472657373",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2041:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7dd0e096e5d6ca82660ac6cbc3819459988d759e079a862f7295f4fd77cd46",
                          "typeString": "literal_string \"Cannot set registry to a zero address\""
                        },
                        "value": "Cannot set registry to a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7dd0e096e5d6ca82660ac6cbc3819459988d759e079a862f7295f4fd77cd46",
                          "typeString": "literal_string \"Cannot set registry to a zero address\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6380,
                        6381
                      ],
                      "referencedDeclaration": 6381,
                      "src": "2006:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:75:3"
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 370,
                      "src": "2092:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2092:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 367,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 366,
                    "name": "REGISTRY_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "2107:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2092:28:3"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 365,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2160:4:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_registry": {
                        "declaration": 352,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2166:9:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 368,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    sstore(slot, _registry)\n}",
                  "src": "2130:62:3"
                }
              ]
            },
            "documentation": null,
            "id": 370,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "1953:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                    "typeString": "contract IPassportLogicRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 351,
                    "name": "IPassportLogicRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 223,
                    "src": "1953:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1952:34:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1996:0:3"
            },
            "scope": 371,
            "src": "1931:261:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 372,
        "src": "215:1979:3"
      }
    ],
    "src": "0:2194:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/Passport.sol",
    "exportedSymbols": {
      "Passport": [
        371
      ]
    },
    "id": 372,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 282,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/ownership/ClaimableProxy.sol",
        "file": "./ownership/ClaimableProxy.sol",
        "id": 283,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 4172,
        "src": "26:40:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/lifecycle/DestructibleProxy.sol",
        "file": "./lifecycle/DestructibleProxy.sol",
        "id": 284,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 709,
        "src": "67:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/IPassportLogicRegistry.sol",
        "file": "./IPassportLogicRegistry.sol",
        "id": 285,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 224,
        "src": "111:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/upgradeability/Proxy.sol",
        "file": "./upgradeability/Proxy.sol",
        "id": 286,
        "nodeType": "ImportDirective",
        "scope": 372,
        "sourceUnit": 6363,
        "src": "150:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 287,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6362,
              "src": "236:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$6362",
                "typeString": "contract Proxy"
              }
            },
            "id": 288,
            "nodeType": "InheritanceSpecifier",
            "src": "236:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 289,
              "name": "ClaimableProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4171,
              "src": "243:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimableProxy_$4171",
                "typeString": "contract ClaimableProxy"
              }
            },
            "id": 290,
            "nodeType": "InheritanceSpecifier",
            "src": "243:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 291,
              "name": "DestructibleProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 708,
              "src": "259:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DestructibleProxy_$708",
                "typeString": "contract DestructibleProxy"
              }
            },
            "id": 292,
            "nodeType": "InheritanceSpecifier",
            "src": "259:17:3"
          }
        ],
        "contractDependencies": [
          708,
          769,
          4171,
          4307,
          6362
        ],
        "contractKind": "contract",
        "documentation": "@title Passport",
        "fullyImplemented": true,
        "id": 371,
        "linearizedBaseContracts": [
          371,
          708,
          4171,
          4307,
          769,
          6362
        ],
        "name": "Passport",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 298,
            "name": "PassportLogicRegistryChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "indexed": true,
                  "name": "previousRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "328:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "indexed": true,
                  "name": "newRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "370:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:85:3"
            },
            "src": "284:120:3"
          },
          {
            "constant": true,
            "id": 301,
            "name": "REGISTRY_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 371,
            "src": "646:107:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 299,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307861303462616236396534356165623463393461373862613562633162653637656632383937376334666466383135613330623832396137393465623637613461",
              "id": 300,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "687:66:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_72503752356649306665791338292725140274549562385946020229019822058611334871626_by_1",
                "typeString": "int_const 7250...(69 digits omitted)...1626"
              },
              "value": "0xa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "937:124:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "REGISTRY_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "954:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6f72672e6d6f6e657468612e70617373706f72742e70726f78792e7265676973747279",
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "981:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a",
                                "typeString": "literal_string \"org.monetha.passport.proxy.registry\""
                              },
                              "value": "org.monetha.passport.proxy.registry"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a",
                                "typeString": "literal_string \"org.monetha.passport.proxy.registry\""
                              }
                            ],
                            "id": 308,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6371,
                            "src": "971:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "971:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "954:65:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 306,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6366,
                      "src": "947:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "947:73:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "1044:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                          "typeString": "contract IPassportLogicRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                          "typeString": "contract IPassportLogicRegistry"
                        }
                      ],
                      "id": 314,
                      "name": "_setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "1031:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPassportLogicRegistry_$223_$returns$__$",
                        "typeString": "function (contract IPassportLogicRegistry)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:23:3"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@param _registry Address of the passport implementations registry.",
            "id": 319,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "896:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                    "typeString": "contract IPassportLogicRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 302,
                    "name": "IPassportLogicRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 223,
                    "src": "896:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "895:34:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "937:0:3"
            },
            "scope": 371,
            "src": "884:177:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "1204:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 324,
                      "name": "_getRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "1221:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPassportLogicRegistry_$223_$",
                        "typeString": "function () view returns (contract IPassportLogicRegistry)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "functionReturnParameters": 323,
                  "id": 326,
                  "nodeType": "Return",
                  "src": "1214:21:3"
                }
              ]
            },
            "documentation": "@return the address of passport logic registry.",
            "id": 328,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPassportLogicRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "1195:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1194:9:3"
            },
            "scope": 371,
            "src": "1138:104:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "1539:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 333,
                          "name": "_getRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "1556:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPassportLogicRegistry_$223_$",
                            "typeString": "function () view returns (contract IPassportLogicRegistry)"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1556:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                          "typeString": "contract IPassportLogicRegistry"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentPassportLogic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 222,
                      "src": "1556:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 332,
                  "id": 337,
                  "nodeType": "Return",
                  "src": "1549:47:3"
                }
              ]
            },
            "documentation": "@dev Returns the current passport logic implementation (used in Proxy fallback function to delegate call\nto passport logic implementation).\n@return Address of the current passport implementation",
            "id": 339,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "1530:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1529:9:3"
            },
            "scope": 371,
            "src": "1480:123:3",
            "stateMutability": "view",
            "superFunction": 6354,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "1820:105:3",
              "statements": [
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 350,
                      "src": "1830:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1830:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 346,
                    "name": "REGISTRY_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "1845:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1830:28:3"
                },
                {
                  "externalReferences": [
                    {
                      "reg": {
                        "declaration": 342,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1891:3:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 345,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1904:4:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 348,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    reg := sload(slot)\n}",
                  "src": "1868:57:3"
                }
              ]
            },
            "documentation": "@dev Returns the current passport implementations registry.\n@return Address of the current implementation",
            "id": 350,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "reg",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1792:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                    "typeString": "contract IPassportLogicRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 341,
                    "name": "IPassportLogicRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 223,
                    "src": "1792:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1791:28:3"
            },
            "scope": 371,
            "src": "1745:180:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "1996:196:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 357,
                              "name": "_registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "2022:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                                "typeString": "contract IPassportLogicRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                                "typeString": "contract IPassportLogicRegistry"
                              }
                            ],
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2014:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2014:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2036:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "2014:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f742073657420726567697374727920746f2061207a65726f2061646472657373",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2041:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7dd0e096e5d6ca82660ac6cbc3819459988d759e079a862f7295f4fd77cd46",
                          "typeString": "literal_string \"Cannot set registry to a zero address\""
                        },
                        "value": "Cannot set registry to a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7dd0e096e5d6ca82660ac6cbc3819459988d759e079a862f7295f4fd77cd46",
                          "typeString": "literal_string \"Cannot set registry to a zero address\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6380,
                        6381
                      ],
                      "referencedDeclaration": 6381,
                      "src": "2006:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:75:3"
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 370,
                      "src": "2092:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2092:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 367,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 366,
                    "name": "REGISTRY_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "2107:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2092:28:3"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 365,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2160:4:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_registry": {
                        "declaration": 352,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2166:9:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 368,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    sstore(slot, _registry)\n}",
                  "src": "2130:62:3"
                }
              ]
            },
            "documentation": null,
            "id": 370,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "1953:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                    "typeString": "contract IPassportLogicRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 351,
                    "name": "IPassportLogicRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 223,
                    "src": "1953:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPassportLogicRegistry_$223",
                      "typeString": "contract IPassportLogicRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1952:34:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1996:0:3"
            },
            "scope": 371,
            "src": "1931:261:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 372,
        "src": "215:1979:3"
      }
    ],
    "src": "0:2194:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-09-20T21:39:23.998Z",
  "devdoc": {
    "methods": {
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "destroy()": {
        "details": "Transfers the current balance to the owner and terminates the contract."
      },
      "getPassportLogicRegistry()": {
        "return": "the address of passport logic registry."
      },
      "owner()": {
        "return": "The owner address."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to set the pendingOwner address.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Passport"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}