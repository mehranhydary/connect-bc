{
  "contractName": "NoOwner",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from_",
          "type": "address"
        },
        {
          "name": "value_",
          "type": "uint256"
        },
        {
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from_\",\"type\":\"address\"},{\"name\":\"value_\",\"type\":\"uint256\"},{\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>\\r\",\"methods\":{\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\\r\",\"params\":{\"contractAddr\":\"The address of the Ownable to be reclaimed.\\r\"}},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\\r\"},\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\\r\",\"params\":{\"token\":\"ERC20Basic The address of the token contract\\r\"}},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC23 compatible tokens\\r\",\"params\":{\"data_\":\"Bytes The data passed from the caller.\\r\",\"from_\":\"address The address that is transferring the tokens\\r\",\"value_\":\"uint256 the amount of the specified token\\r\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Base contract for contracts that should not own things.\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/NoOwner.sol\":\"NoOwner\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0xb528b2842462f9d3aee0bde457ff3d30e373cf78935c1a7e3727b16dad75856e\",\"urls\":[\"bzzr://4b257cbe950d5d440fe60b5067d698ebd12a58f304ae0956093a8b540d965ced\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x79c1eb4fb5636d7452a542dc0bf8768d04c5da3b99ff42c838b8bbf76857b1d1\",\"urls\":[\"bzzr://ba9f32c49359efb6818f440163957c02bcf57cf996143d2513ad18f78bec3022\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoEther.sol\":{\"keccak256\":\"0x4e4cd5748d21c936cacd92473e2d6f539a256b8d2262885d9bfb73a1462a9414\",\"urls\":[\"bzzr://4e90df9e1551a715f20d74009ca2ee46923fad9aa6fd6a2860078680bfb3a923\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0xb25fea2fe6025b6f1c6ea7951179fdba0ba771d493d81193177f9612618a76ff\",\"urls\":[\"bzzr://8d140a9e8523407d9558876107c0dae97721a7bddfb819578da42c82bb4898c8\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/NoOwner.sol\":{\"keccak256\":\"0xc98b0a38f651194428700274c4154aed2e13fc581add8a8167df65f23efa232c\",\"urls\":[\"bzzr://0ae93d8e34a591c443f589baafd3dfcf8ef6f901181e8b430f22de47a4b502e6\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x121061e0cd5da8776179b3bedc5844e8c9f79ef33c5f5c0e958fbd6d4fc3670c\",\"urls\":[\"bzzr://846540111c4d0e4ad95bf72201d1802ab337724ab718174ed047536100d972d4\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/ERC20.sol\":{\"keccak256\":\"0xbd3c05c3f208392ef3b629c809cc3ea564c64f11541c96380f4e731964b9009c\",\"urls\":[\"bzzr://8a9c5ba9c614eb7b7bc019497c027f2e12ee4c18869940f74c617160758224c5\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/ERC20Basic.sol\":{\"keccak256\":\"0x2d8956ad12279d1510bcc84bc58b6ef6f85d57aafc10ec19d5aff56cef443e06\",\"urls\":[\"bzzr://e3e97d5b6a2417e26d6fe3fbd8aebe05dcc0c380938c9c3f6763104400d83f6e\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/SafeERC20.sol\":{\"keccak256\":\"0x6bc5ee7b210b36f4dd5ddf7fd8610d494aef80daf99760695ad1c6ffe7d7e9d3\",\"urls\":[\"bzzr://1051683e4d6d222f58949a76f3c68ded92f5e79c48482796ef979a40c0b28349\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060003414151561005357600080fd5b610848806100626000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc320146100875780632aed7f3f146100ca5780638da5cb5b1461010d5780639f727c2714610164578063c0ee0b8a1461017b578063f2fde38b146101e0575b34801561008457600080fd5b50005b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610223565b005b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a8565b005b34801561011957600080fd5b506101226104e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017057600080fd5b50610179610505565b005b34801561018757600080fd5b506101de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506105d7565b005b3480156101ec57600080fd5b50610221600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105dc565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561028057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b505050506040513d602081101561034557600080fd5b810190808051906020019092919050505090506103a46000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166107319092919063ffffffff16565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561040557600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156105d557fe5b565b600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561067357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b8101908080519060200190929190505050151561081757fe5b5050505600a165627a7a723058207286874aa27ff427a37a2a9ec0464b3224911ee9f2af82c5c8d565d14f9b821a0029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc320146100875780632aed7f3f146100ca5780638da5cb5b1461010d5780639f727c2714610164578063c0ee0b8a1461017b578063f2fde38b146101e0575b34801561008457600080fd5b50005b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610223565b005b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a8565b005b34801561011957600080fd5b506101226104e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017057600080fd5b50610179610505565b005b34801561018757600080fd5b506101de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506105d7565b005b3480156101ec57600080fd5b50610221600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105dc565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561028057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b505050506040513d602081101561034557600080fd5b810190808051906020019092919050505090506103a46000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166107319092919063ffffffff16565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561040557600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156105d557fe5b565b600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561067357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b8101908080519060200190929190505050151561081757fe5b5050505600a165627a7a723058207286874aa27ff427a37a2a9ec0464b3224911ee9f2af82c5c8d565d14f9b821a0029",
  "sourceMap": "400:64:39:-;;;522:10:40;514:5;;:18;;;;;;;;;;;;;;;;;;999:1:37;986:9;:14;978:23;;;;;;;;400:64:39;;;;;;",
  "deployedSourceMap": "400:64:39:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:64:39;;604:152:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:152:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:167:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;496:167:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:20:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:20:40;;;;;;;;;;;;;;;;;;;;;;;;;;;1230:88:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1230:88:37;;;;;;653:97:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;653:97:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:173:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:173:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:152:33;670:15;675:5:40;;;;;;;;;;;661:19;;:10;:19;;;653:28;;;;;;;;688:5:33;:15;;;704:4;688:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:21:33;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;688:21:33;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;688:21:33;;;;;;;;;;;;;;;;670:39;;716:34;735:5;;;;;;;;;;;742:7;716:5;:18;;;;:34;;;;;:::i;:::-;604:152;;:::o;496:167:36:-;569:20;675:5:40;;;;;;;;;;;661:19;;:10;:19;;;653:28;;;;;;;;600:12:36;569:44;;620:12;:30;;;651:5;;;;;;;;;;;620:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;620:37:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;620:37:36;;;;496:167;;:::o;247:20:40:-;;;;;;;;;;;;;:::o;1230:88:37:-;675:5:40;;;;;;;;;;;661:19;;:10;:19;;;653:28;;;;;;;;1287:5:37;;;;;;;;;;;:10;;:24;1298:4;:12;;;1287:24;;;;;;;;;;;;;;;;;;;;;;;1280:32;;;;;;1230:88::o;653:97:38:-;736:8;;;864:173:40;675:5;;;;;;;;;;;661:19;;:10;:19;;;653:28;;;;;;;;961:1;941:22;;:8;:22;;;;933:31;;;;;;;;999:8;971:37;;992:5;;;;;;;;;;;971:37;;;;;;;;;;;;1023:8;1015:5;;:16;;;;;;;;;;;;;;;;;;864:173;:::o;379:122:49:-;469:5;:14;;;484:2;488:5;469:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:25:49;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;469:25:49;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;469:25:49;;;;;;;;;;;;;;;;462:33;;;;;;379:122;;;:::o",
  "source": "pragma solidity ^0.4.11;\r\n\r\nimport \"./HasNoEther.sol\";\r\nimport \"./HasNoTokens.sol\";\r\nimport \"./HasNoContracts.sol\";\r\n\r\n/**\r\n * @title Base contract for contracts that should not own things.\r\n * @author Remco Bloemen <remco@2π.com>\r\n * @dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\r\n * Owned contracts. See respective base contracts for details.\r\n */\r\ncontract NoOwner is HasNoEther, HasNoTokens, HasNoContracts {\r\n}\r\n",
  "sourcePath": "c:\\UNICEF\\dev\\connect-bc\\bids-api\\blockchain\\contracts\\openzeppelin-solidity\\contracts\\ownership\\NoOwner.sol",
  "ast": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/NoOwner.sol",
    "exportedSymbols": {
      "NoOwner": [
        2713
      ]
    },
    "id": 2714,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2703,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:39"
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 2704,
        "nodeType": "ImportDirective",
        "scope": 2714,
        "sourceUnit": 2683,
        "src": "28:26:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoTokens.sol",
        "file": "./HasNoTokens.sol",
        "id": 2705,
        "nodeType": "ImportDirective",
        "scope": 2714,
        "sourceUnit": 2702,
        "src": "56:27:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 2706,
        "nodeType": "ImportDirective",
        "scope": 2714,
        "sourceUnit": 2648,
        "src": "85:30:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2707,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2682,
              "src": "420:10:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$2682",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 2708,
            "nodeType": "InheritanceSpecifier",
            "src": "420:10:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2709,
              "name": "HasNoTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2701,
              "src": "432:11:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoTokens_$2701",
                "typeString": "contract HasNoTokens"
              }
            },
            "id": 2710,
            "nodeType": "InheritanceSpecifier",
            "src": "432:11:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2711,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2647,
              "src": "445:14:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$2647",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 2712,
            "nodeType": "InheritanceSpecifier",
            "src": "445:14:39"
          }
        ],
        "contractDependencies": [
          2551,
          2647,
          2682,
          2701,
          2769
        ],
        "contractKind": "contract",
        "documentation": "@title Base contract for contracts that should not own things.\r\n@author Remco Bloemen <remco@2π.com>\r\n@dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\r\nOwned contracts. See respective base contracts for details.\r",
        "fullyImplemented": true,
        "id": 2713,
        "linearizedBaseContracts": [
          2713,
          2647,
          2701,
          2551,
          2682,
          2769
        ],
        "name": "NoOwner",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 2714,
        "src": "400:64:39"
      }
    ],
    "src": "0:466:39"
  },
  "legacyAST": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/NoOwner.sol",
    "exportedSymbols": {
      "NoOwner": [
        2713
      ]
    },
    "id": 2714,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2703,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:39"
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 2704,
        "nodeType": "ImportDirective",
        "scope": 2714,
        "sourceUnit": 2683,
        "src": "28:26:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoTokens.sol",
        "file": "./HasNoTokens.sol",
        "id": 2705,
        "nodeType": "ImportDirective",
        "scope": 2714,
        "sourceUnit": 2702,
        "src": "56:27:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 2706,
        "nodeType": "ImportDirective",
        "scope": 2714,
        "sourceUnit": 2648,
        "src": "85:30:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2707,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2682,
              "src": "420:10:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$2682",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 2708,
            "nodeType": "InheritanceSpecifier",
            "src": "420:10:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2709,
              "name": "HasNoTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2701,
              "src": "432:11:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoTokens_$2701",
                "typeString": "contract HasNoTokens"
              }
            },
            "id": 2710,
            "nodeType": "InheritanceSpecifier",
            "src": "432:11:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2711,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2647,
              "src": "445:14:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$2647",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 2712,
            "nodeType": "InheritanceSpecifier",
            "src": "445:14:39"
          }
        ],
        "contractDependencies": [
          2551,
          2647,
          2682,
          2701,
          2769
        ],
        "contractKind": "contract",
        "documentation": "@title Base contract for contracts that should not own things.\r\n@author Remco Bloemen <remco@2π.com>\r\n@dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\r\nOwned contracts. See respective base contracts for details.\r",
        "fullyImplemented": true,
        "id": 2713,
        "linearizedBaseContracts": [
          2713,
          2647,
          2701,
          2551,
          2682,
          2769
        ],
        "name": "NoOwner",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 2714,
        "src": "400:64:39"
      }
    ],
    "src": "0:466:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-28T17:42:08.665Z",
  "devdoc": {
    "author": "Remco Bloemen <remco@2π.com>\r",
    "methods": {
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts\r",
        "params": {
          "contractAddr": "The address of the Ownable to be reclaimed.\r"
        }
      },
      "reclaimEther()": {
        "details": "Transfer all Ether held by the contract to the owner.\r"
      },
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens\r",
        "params": {
          "token": "ERC20Basic The address of the token contract\r"
        }
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC23 compatible tokens\r",
        "params": {
          "data_": "Bytes The data passed from the caller.\r",
          "from_": "address The address that is transferring the tokens\r",
          "value_": "uint256 the amount of the specified token\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      }
    },
    "title": "Base contract for contracts that should not own things.\r"
  },
  "userdoc": {
    "methods": {}
  }
}