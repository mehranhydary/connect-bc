{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_goal",
          "type": "uint256"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526000600760146101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405160c080620032d98339810180604052810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050508282878787854284101515156200009857600080fd5b838310151515620000a857600080fd5b600082111515620000b857600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff1614151515620000df57600080fd5b620000f8620002df640100000000026401000000009004565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600181905550826002819055508160048190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050600081111515620001a157600080fd5b806006819055505033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081111515620001fa57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002276200030e565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156200027a573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060088190555050818311151515620002d357600080fd5b50505050505062000330565b6000620002eb6200031f565b604051809103906000f08015801562000308573d6000803e3d6000fd5b50905090565b604051610aa7806200111883390190565b60405161171a8062001bbf83390190565b610dd880620003406000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100fc5780633197cbb614610127578063355274ea14610152578063401938831461017d5780634042b66f146101a85780634bb278f3146101d3578063521eb273146101ea57806378e97925146102415780637d3d65221461026c5780638d4e40831461029b5780638da5cb5b146102ca578063b5545a3c14610321578063ec8ac4d814610338578063ecb70fb71461036e578063f2fde38b1461039d578063fbfa77cf146103e0578063fc0c546a14610437575b6100fa3361048e565b005b34801561010857600080fd5b50610111610679565b6040518082815260200191505060405180910390f35b34801561013357600080fd5b5061013c61067f565b6040518082815260200191505060405180910390f35b34801561015e57600080fd5b50610167610685565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b5061019261068b565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd610691565b6040518082815260200191505060405180910390f35b3480156101df57600080fd5b506101e8610697565b005b3480156101f657600080fd5b506101ff610773565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024d57600080fd5b50610256610799565b6040518082815260200191505060405180910390f35b34801561027857600080fd5b5061028161079f565b604051808215151515815260200191505060405180910390f35b3480156102a757600080fd5b506102b06107ae565b604051808215151515815260200191505060405180910390f35b3480156102d657600080fd5b506102df6107c1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032d57600080fd5b506103366107e7565b005b61036c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048e565b005b34801561037a57600080fd5b506103836108ed565b604051808215151515815260200191505060405180910390f35b3480156103a957600080fd5b506103de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610910565b005b3480156103ec57600080fd5b506103f5610a68565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044357600080fd5b5061044c610a8e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff16141515156104b757600080fd5b6104bf610ab3565b15156104ca57600080fd5b3491506104e260045483610ae990919063ffffffff16565b90506104f982600554610b1c90919063ffffffff16565b6005819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b505050506040513d60208110156105ed57600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a3610674610b3a565b505050565b60045481565b60025481565b60065481565b60085481565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f357600080fd5b600760149054906101000a900460ff1615151561070f57600080fd5b6107176108ed565b151561072257600080fd5b61072a610c12565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60006008546005541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561080257600080fd5b61080a61079f565b15151561081657600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108d357600080fd5b505af11580156108e7573d6000803e3d6000fd5b50505050565b60008060065460055410159050610902610d6b565b8061090a5750805b91505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561096c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109a857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600654610ace34600554610b1c90919063ffffffff16565b11159050610ada610d77565b8015610ae35750805b91505090565b60008082840290506000841480610b0a5750828482811515610b0757fe5b04145b1515610b1257fe5b8091505092915050565b6000808284019050838110151515610b3057fe5b8091505092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610bf757600080fd5b505af1158015610c0b573d6000803e3d6000fd5b5050505050565b610c1a61079f565b15610cc257600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b50505050610d61565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d4857600080fd5b505af1158015610d5c573d6000803e3d6000fd5b505050505b610d69610daa565b565b60006002544211905090565b60008060006001544210158015610d9057506002544211155b915060003414159050818015610da35750805b9250505090565b5600a165627a7a72305820b9cbf26ba6b62a5866c1d5496cd8883cb542c2a0fcb05794b3229587df14780e0029608060405234801561001057600080fd5b50604051602080610aa783398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff161415151561009957600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff021916908360028111156100f957fe5b0217905550506109998061010e6000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806343d726d61461009e578063521eb273146100b55780638c52dc411461010c5780638da5cb5b14610123578063c19d93fb1461017a578063cb13cddb146101b3578063f2fde38b1461020a578063f340fa011461024d578063fa89401a14610283575b600080fd5b3480156100aa57600080fd5b506100b36102c6565b005b3480156100c157600080fd5b506100ca610426565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061012161044c565b005b34801561012f57600080fd5b5061013861052d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018657600080fd5b5061018f610552565b6040518082600281111561019f57fe5b60ff16815260200191505060405180910390f35b3480156101bf57600080fd5b506101f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610565565b6040518082815260200191505060405180910390f35b34801561021657600080fd5b5061024b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061057d565b005b610281600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106d2565b005b34801561028f57600080fd5b506102c4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561032157600080fd5b6000600281111561032e57fe5b600260149054906101000a900460ff16600281111561034957fe5b14151561035557600080fd5b60028060146101000a81548160ff0219169083600281111561037357fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610423573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104a757600080fd5b600060028111156104b457fe5b600260149054906101000a900460ff1660028111156104cf57fe5b1415156104db57600080fd5b6001600260146101000a81548160ff021916908360028111156104fa57fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561061457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561072d57600080fd5b6000600281111561073a57fe5b600260149054906101000a900460ff16600281111561075557fe5b14151561076157600080fd5b6107b334600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461094f90919063ffffffff16565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006001600281111561080857fe5b600260149054906101000a900460ff16600281111561082357fe5b14151561082f57600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108fc573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040518082815260200191505060405180910390a25050565b600080828401905083811015151561096357fe5b80915050929150505600a165627a7a723058209e7d4771e18d11cc7ab27b6662bff8c50140f309c3b4ca1653eeaf878902f306002960806040526000600360146101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116ab8061006f6000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b146100eb57806306fdde031461011a578063095ea7b3146101aa57806318160ddd1461020f57806323b872dd1461023a578063313ce567146102bf57806340c10f19146102f0578063661884631461035557806370a08231146103ba5780637d64bcb4146104115780638da5cb5b1461044057806395d89b4114610497578063a9059cbb14610527578063d73dd6231461058c578063dd62ed3e146105f1578063f2fde38b14610668575b600080fd5b3480156100f757600080fd5b506101006106ab565b604051808215151515815260200191505060405180910390f35b34801561012657600080fd5b5061012f6106be565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016f578082015181840152602081019050610154565b50505050905090810190601f16801561019c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b657600080fd5b506101f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f7565b604051808215151515815260200191505060405180910390f35b34801561021b57600080fd5b506102246107e9565b6040518082815260200191505060405180910390f35b34801561024657600080fd5b506102a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ef565b604051808215151515815260200191505060405180910390f35b3480156102cb57600080fd5b506102d4610adb565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102fc57600080fd5b5061033b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ae0565b604051808215151515815260200191505060405180910390f35b34801561036157600080fd5b506103a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb2565b604051808215151515815260200191505060405180910390f35b3480156103c657600080fd5b506103fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f43565b6040518082815260200191505060405180910390f35b34801561041d57600080fd5b50610426610f8c565b604051808215151515815260200191505060405180910390f35b34801561044c57600080fd5b50610455611038565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a357600080fd5b506104ac61105e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ec5780820151818401526020810190506104d1565b50505050905090810190601f1680156105195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053357600080fd5b50610572600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611097565b604051808215151515815260200191505060405180910390f35b34801561059857600080fd5b506105d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061126d565b604051808215151515815260200191505060405180910390f35b3480156105fd57600080fd5b50610652600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611469565b6040518082815260200191505060405180910390f35b34801561067457600080fd5b506106a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114f0565b005b600360149054906101000a900460ff1681565b6040805190810160405280601681526020017f53616d706c652043726f776473616c6520546f6b656e0000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561082e57600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506108ff83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461164890919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061099483600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166190919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109ea838261164890919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601281565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b3e57600080fd5b600360149054906101000a900460ff16151515610b5a57600080fd5b610b6f8260005461166190919063ffffffff16565b600081905550610bc782600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610dc3576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e57565b610dd6838261164890919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fea57600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f534354000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156110d457600080fd5b61112682600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461164890919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111bb82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60006112fe82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561154c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561158857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561165657fe5b818303905092915050565b600080828401905083811015151561167557fe5b80915050929150505600a165627a7a72305820b27a863140fec958a5006933c9152f91742b6bcc889c388da89178be795675b80029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100fc5780633197cbb614610127578063355274ea14610152578063401938831461017d5780634042b66f146101a85780634bb278f3146101d3578063521eb273146101ea57806378e97925146102415780637d3d65221461026c5780638d4e40831461029b5780638da5cb5b146102ca578063b5545a3c14610321578063ec8ac4d814610338578063ecb70fb71461036e578063f2fde38b1461039d578063fbfa77cf146103e0578063fc0c546a14610437575b6100fa3361048e565b005b34801561010857600080fd5b50610111610679565b6040518082815260200191505060405180910390f35b34801561013357600080fd5b5061013c61067f565b6040518082815260200191505060405180910390f35b34801561015e57600080fd5b50610167610685565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b5061019261068b565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd610691565b6040518082815260200191505060405180910390f35b3480156101df57600080fd5b506101e8610697565b005b3480156101f657600080fd5b506101ff610773565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024d57600080fd5b50610256610799565b6040518082815260200191505060405180910390f35b34801561027857600080fd5b5061028161079f565b604051808215151515815260200191505060405180910390f35b3480156102a757600080fd5b506102b06107ae565b604051808215151515815260200191505060405180910390f35b3480156102d657600080fd5b506102df6107c1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032d57600080fd5b506103366107e7565b005b61036c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048e565b005b34801561037a57600080fd5b506103836108ed565b604051808215151515815260200191505060405180910390f35b3480156103a957600080fd5b506103de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610910565b005b3480156103ec57600080fd5b506103f5610a68565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044357600080fd5b5061044c610a8e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff16141515156104b757600080fd5b6104bf610ab3565b15156104ca57600080fd5b3491506104e260045483610ae990919063ffffffff16565b90506104f982600554610b1c90919063ffffffff16565b6005819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b505050506040513d60208110156105ed57600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a3610674610b3a565b505050565b60045481565b60025481565b60065481565b60085481565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f357600080fd5b600760149054906101000a900460ff1615151561070f57600080fd5b6107176108ed565b151561072257600080fd5b61072a610c12565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60006008546005541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561080257600080fd5b61080a61079f565b15151561081657600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108d357600080fd5b505af11580156108e7573d6000803e3d6000fd5b50505050565b60008060065460055410159050610902610d6b565b8061090a5750805b91505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561096c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109a857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600654610ace34600554610b1c90919063ffffffff16565b11159050610ada610d77565b8015610ae35750805b91505090565b60008082840290506000841480610b0a5750828482811515610b0757fe5b04145b1515610b1257fe5b8091505092915050565b6000808284019050838110151515610b3057fe5b8091505092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610bf757600080fd5b505af1158015610c0b573d6000803e3d6000fd5b5050505050565b610c1a61079f565b15610cc257600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b50505050610d61565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d4857600080fd5b505af1158015610d5c573d6000803e3d6000fd5b505050505b610d69610daa565b565b60006002544211905090565b60008060006001544210158015610d9057506002544211155b915060003414159050818015610da35750805b9250505090565b5600a165627a7a72305820b9cbf26ba6b62a5866c1d5496cd8883cb542c2a0fcb05794b3229587df14780e0029",
  "sourceMap": "1002:621:24:-;;;355:5:21;329:31;;;;;;;;;;;;;;;;;;;;1072:436:24;8:9:-1;5:2;;;30:1;27;20:12;5:2;1072:436:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:5;1216:4;1294:10;1306:8;1316:5;1323:7;1318:3:20;1304:10;:17;;1296:26;;;;;;;;1348:10;1336:8;:22;;1328:31;;;;;;;;1381:1;1373:5;:9;1365:18;;;;;;;;1408:3;1397:7;:14;;;;1389:23;;;;;;;;1427:21;:19;;;:21;;;:::i;:::-;1419:5;;:29;;;;;;;;;;;;;;;;;;1466:10;1454:9;:22;;;;1492:8;1482:7;:18;;;;1513:5;1506:4;:12;;;;1533:7;1524:6;;:16;;;;;;;;;;;;;;;;;;1201:344;;;;339:1:19;332:4;:8;324:17;;;;;;;;353:4;347:3;:10;;;;279:83;502:10:39;494:5;;:18;;;;;;;;;;;;;;;;;;667:1:23;659:5;:9;651:18;;;;;;;;699:6;;;;;;;;;;;683:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;683:23:23;675:5;;:31;;;;;;;;;;;;;;;;;;719:5;712:4;:12;;;;601:128;1498:4:24;1489:5;:13;;1481:22;;;;;;;;1072:436;;;;;;1002:621;;1512:108;1561:13;1589:26;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1589:26:24;1582:33;;1512:108;:::o;1002:621::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1002:621:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1839:21:20;1849:10;1839:9;:21::i;:::-;1002:621:24;775:19:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;775:19:20;;;;;;;;;;;;;;;;;;;;;;;636:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;636:22:20;;;;;;;;;;;;;;;;;;;;;;;256:18:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:18:19;;;;;;;;;;;;;;;;;;;;;;;484:19:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:19:23;;;;;;;;;;;;;;;;;;;;;;;834:24:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:24:20;;;;;;;;;;;;;;;;;;;;;;;531:157:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;531:157:21;;;;;;702:21:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;702:21:20;;;;;;;;;;;;;;;;;;;;;;;;;;;608:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:24:20;;;;;;;;;;;;;;;;;;;;;;;1395:89:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1395:89:23;;;;;;;;;;;;;;;;;;;;;;;;;;;329:31:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;329:31:21;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:39;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:121:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1042:121:23;;;;;;1908:431:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:139:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;749:139:19;;;;;;;;;;;;;;;;;;;;;;;;;;;827:169:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:24:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;572:24:23;;;;;;;;;;;;;;;;;;;;;;;;;;;500:26:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:26:20;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:431;2033:17;2113:14;1992:3;1977:11;:18;;;;1969:27;;;;;;;;2010:15;:13;:15::i;:::-;2002:24;;;;;;;;2053:9;2033:29;;2130:19;2144:4;;2130:9;:13;;:19;;;;:::i;:::-;2113:36;;2188:24;2202:9;2188;;:13;;:24;;;;:::i;:::-;2176:9;:36;;;;2219:5;;;;;;;;;;;:10;;;2230:11;2243:6;2219:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2219:31:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2219:31:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2219:31:20;;;;;;;;;;;;;;;;;2282:11;2256:57;;2270:10;2256:57;;;2295:9;2306:6;2256:57;;;;;;;;;;;;;;;;;;;;;;;;2320:14;:12;:14::i;:::-;1908:431;;;:::o;775:19::-;;;;:::o;636:22::-;;;;:::o;256:18:19:-;;;;:::o;484:19:23:-;;;;:::o;834:24:20:-;;;;:::o;531:157:21:-;647:5:39;;;;;;;;;;;633:19;;:10;:19;;;625:28;;;;;;;;583:11:21;;;;;;;;;;;582:12;574:21;;;;;;;;609:10;:8;:10::i;:::-;601:19;;;;;;;;627:14;:12;:14::i;:::-;647:11;;;;;;;;;;679:4;665:11;;:18;;;;;;;;;;;;;;;;;;531:157::o;702:21:20:-;;;;;;;;;;;;;:::o;608:24::-;;;;:::o;1395:89:23:-;1443:4;1475;;1462:9;;:17;;1455:24;;1395:89;:::o;329:31:21:-;;;;;;;;;;;;;:::o;238:20:39:-;;;;;;;;;;;;;:::o;1042:121:23:-;1086:11;;;;;;;;;;;1078:20;;;;;;;;1113:13;:11;:13::i;:::-;1112:14;1104:23;;;;;;;;1134:5;;;;;;;;;;;:12;;;1147:10;1134:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:24:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1134:24:23;;;;1042:121::o;749:139:19:-;794:4;806:15;837:3;;824:9;;:16;;806:34;;853:16;:14;:16::i;:::-;:30;;;;873:10;853:30;846:37;;749:139;;:::o;827:169:39:-;647:5;;;;;;;;;;;633:19;;:10;:19;;;625:28;;;;;;;;923:1;903:22;;:8;:22;;;;895:31;;;;;;;;960:8;932:37;;953:5;;;;;;;;;;;932:37;;;;;;;;;;;;983:8;975:5;;:16;;;;;;;;;;;;;;;;;;827:169;:::o;572:24:23:-;;;;;;;;;;;;;:::o;500:26:20:-;;;;;;;;;;;;;:::o;482:164:19:-;534:4;546:14;591:3;;563:24;577:9;563;;:13;;:24;;;;:::i;:::-;:31;;546:48;;607:21;:19;:21::i;:::-;:34;;;;;632:9;607:34;600:41;;482:164;;:::o;138:147:31:-;200:7;215:9;231:1;227;:5;215:17;;250:1;245;:6;:20;;;;264:1;259;255;:5;;;;;;;;:10;245:20;238:28;;;;;;279:1;272:8;;138:147;;;;;:::o;680:133::-;742:7;757:9;773:1;769;:5;757:17;;792:1;787;:6;;780:14;;;;;;807:1;800:8;;680:133;;;;;:::o;884:86:23:-;923:5;;;;;;;;;;;:13;;;943:9;954:10;923:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;923:42:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;923:42:23;;;;;884:86::o;1232:159::-;1275:13;:11;:13::i;:::-;1271:89;;;1298:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1298:13:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1298:13:23;;;;1271:89;;;1332:5;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1332:21:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1332:21:23;;;;1271:89;1366:20;:18;:20::i;:::-;1232:159::o;2834:82:20:-;2879:4;2904:7;;2898:3;:13;2891:20;;2834:82;:::o;2573:210::-;2625:4;2637:17;2697:20;2664:9;;2657:3;:16;;:34;;;;;2684:7;;2677:3;:14;;2657:34;2637:54;;2733:1;2720:9;:14;;2697:37;;2747:12;:31;;;;;2763:15;2747:31;2740:38;;2573:210;;;:::o;884:38:21:-;:::o",
  "source": "pragma solidity ^0.4.11;\n\nimport \"../crowdsale/CappedCrowdsale.sol\";\nimport \"../crowdsale/RefundableCrowdsale.sol\";\nimport \"../token/MintableToken.sol\";\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is MintableToken {\n\n  string public constant name = \"Sample Crowdsale Token\";\n  string public constant symbol = \"SCT\";\n  uint8 public constant decimals = 18;\n\n}\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale {\n\n  function SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet)\n    CappedCrowdsale(_cap)\n    FinalizableCrowdsale()\n    RefundableCrowdsale(_goal)\n    Crowdsale(_startTime, _endTime, _rate, _wallet)\n  {\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(_goal <= _cap);\n  }\n\n  function createTokenContract() internal returns (MintableToken) {\n    return new SampleCrowdsaleToken();\n  }\n\n}\n",
  "sourcePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/examples/SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        1943
      ],
      "SampleCrowdsaleToken": [
        1892
      ]
    },
    "id": 1944,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1877,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:24"
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/crowdsale/CappedCrowdsale.sol",
        "file": "../crowdsale/CappedCrowdsale.sol",
        "id": 1878,
        "nodeType": "ImportDirective",
        "scope": 1944,
        "sourceUnit": 1346,
        "src": "26:42:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/crowdsale/RefundableCrowdsale.sol",
        "file": "../crowdsale/RefundableCrowdsale.sol",
        "id": 1879,
        "nodeType": "ImportDirective",
        "scope": 1944,
        "sourceUnit": 1876,
        "src": "69:46:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/MintableToken.sol",
        "file": "../token/MintableToken.sol",
        "id": 1880,
        "nodeType": "ImportDirective",
        "scope": 1944,
        "sourceUnit": 3054,
        "src": "116:36:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1881,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3053,
              "src": "329:13:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$3053",
                "typeString": "contract MintableToken"
              }
            },
            "id": 1882,
            "nodeType": "InheritanceSpecifier",
            "src": "329:13:24"
          }
        ],
        "contractDependencies": [
          2591,
          2755,
          2850,
          2879,
          3053,
          3448
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 1892,
        "linearizedBaseContracts": [
          1892,
          3053,
          2591,
          3448,
          2755,
          2850,
          2879
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1885,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "348:54:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1883,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "348:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 1884,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "378:24:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1888,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "406:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1886,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "406:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 1887,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:5:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1891,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "447:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1889,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "447:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1890,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "480:2:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 1944,
        "src": "296:190:24"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1893,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "1030:15:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1345",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 1894,
            "nodeType": "InheritanceSpecifier",
            "src": "1030:15:24"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1895,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1875,
              "src": "1047:19:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1875",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1896,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:19:24"
          }
        ],
        "contractDependencies": [
          1345,
          1553,
          1601,
          1875,
          1892,
          2591
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 1943,
        "linearizedBaseContracts": [
          1943,
          1875,
          1601,
          2591,
          1345,
          1553
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1931,
              "nodeType": "Block",
              "src": "1334:174:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1926,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "1489:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1927,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1906,
                          "src": "1498:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1489:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6380,
                        6381
                      ],
                      "referencedDeclaration": 6380,
                      "src": "1481:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:22:24"
                }
              ]
            },
            "documentation": null,
            "id": 1932,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1911,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1906,
                    "src": "1216:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1912,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1910,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1345,
                  "src": "1200:15:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1345_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1200:21:24"
              },
              {
                "arguments": [],
                "id": 1914,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1913,
                  "name": "FinalizableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1601,
                  "src": "1226:20:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FinalizableCrowdsale_$1601_$",
                    "typeString": "type(contract FinalizableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1226:22:24"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1916,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1904,
                    "src": "1273:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1917,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1915,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1875,
                  "src": "1253:19:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1875_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1253:26:24"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1919,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1898,
                    "src": "1294:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1920,
                    "name": "_endTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1900,
                    "src": "1306:8:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1921,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1902,
                    "src": "1316:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1922,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1908,
                    "src": "1323:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1923,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1918,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1553,
                  "src": "1284:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1553_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1284:47:24"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1898,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1097:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1900,
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1117:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1902,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1135:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1904,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1150:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1906,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1165:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1908,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1179:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1096:99:24"
            },
            "payable": false,
            "returnParameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:24"
            },
            "scope": 1943,
            "src": "1072:436:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1941,
              "nodeType": "Block",
              "src": "1576:44:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1589:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SampleCrowdsaleToken_$1892_$",
                        "typeString": "function () returns (contract SampleCrowdsaleToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1937,
                        "name": "SampleCrowdsaleToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1892,
                        "src": "1593:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1892",
                          "typeString": "contract SampleCrowdsaleToken"
                        }
                      }
                    },
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1892",
                      "typeString": "contract SampleCrowdsaleToken"
                    }
                  },
                  "functionReturnParameters": 1936,
                  "id": 1940,
                  "nodeType": "Return",
                  "src": "1582:33:24"
                }
              ]
            },
            "documentation": null,
            "id": 1942,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTokenContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:24"
            },
            "payable": false,
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1935,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1942,
                  "src": "1561:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$3053",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1934,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3053,
                    "src": "1561:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$3053",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:15:24"
            },
            "scope": 1943,
            "src": "1512:108:24",
            "stateMutability": "nonpayable",
            "superFunction": 1441,
            "visibility": "internal"
          }
        ],
        "scope": 1944,
        "src": "1002:621:24"
      }
    ],
    "src": "0:1624:24"
  },
  "legacyAST": {
    "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        1943
      ],
      "SampleCrowdsaleToken": [
        1892
      ]
    },
    "id": 1944,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1877,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:24"
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/crowdsale/CappedCrowdsale.sol",
        "file": "../crowdsale/CappedCrowdsale.sol",
        "id": 1878,
        "nodeType": "ImportDirective",
        "scope": 1944,
        "sourceUnit": 1346,
        "src": "26:42:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/crowdsale/RefundableCrowdsale.sol",
        "file": "../crowdsale/RefundableCrowdsale.sol",
        "id": 1879,
        "nodeType": "ImportDirective",
        "scope": 1944,
        "sourceUnit": 1876,
        "src": "69:46:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mehranhydary/Desktop/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/MintableToken.sol",
        "file": "../token/MintableToken.sol",
        "id": 1880,
        "nodeType": "ImportDirective",
        "scope": 1944,
        "sourceUnit": 3054,
        "src": "116:36:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1881,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3053,
              "src": "329:13:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$3053",
                "typeString": "contract MintableToken"
              }
            },
            "id": 1882,
            "nodeType": "InheritanceSpecifier",
            "src": "329:13:24"
          }
        ],
        "contractDependencies": [
          2591,
          2755,
          2850,
          2879,
          3053,
          3448
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 1892,
        "linearizedBaseContracts": [
          1892,
          3053,
          2591,
          3448,
          2755,
          2850,
          2879
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1885,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "348:54:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1883,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "348:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 1884,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "378:24:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1888,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "406:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1886,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "406:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 1887,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:5:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1891,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1892,
            "src": "447:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1889,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "447:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1890,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "480:2:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 1944,
        "src": "296:190:24"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1893,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "1030:15:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1345",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 1894,
            "nodeType": "InheritanceSpecifier",
            "src": "1030:15:24"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1895,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1875,
              "src": "1047:19:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1875",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1896,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:19:24"
          }
        ],
        "contractDependencies": [
          1345,
          1553,
          1601,
          1875,
          1892,
          2591
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 1943,
        "linearizedBaseContracts": [
          1943,
          1875,
          1601,
          2591,
          1345,
          1553
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1931,
              "nodeType": "Block",
              "src": "1334:174:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1926,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "1489:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1927,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1906,
                          "src": "1498:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1489:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6380,
                        6381
                      ],
                      "referencedDeclaration": 6380,
                      "src": "1481:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:22:24"
                }
              ]
            },
            "documentation": null,
            "id": 1932,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1911,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1906,
                    "src": "1216:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1912,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1910,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1345,
                  "src": "1200:15:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1345_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1200:21:24"
              },
              {
                "arguments": [],
                "id": 1914,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1913,
                  "name": "FinalizableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1601,
                  "src": "1226:20:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FinalizableCrowdsale_$1601_$",
                    "typeString": "type(contract FinalizableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1226:22:24"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1916,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1904,
                    "src": "1273:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1917,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1915,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1875,
                  "src": "1253:19:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1875_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1253:26:24"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1919,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1898,
                    "src": "1294:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1920,
                    "name": "_endTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1900,
                    "src": "1306:8:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1921,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1902,
                    "src": "1316:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1922,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1908,
                    "src": "1323:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1923,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1918,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1553,
                  "src": "1284:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1553_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1284:47:24"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1898,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1097:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1900,
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1117:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1902,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1135:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1904,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1150:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1906,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1165:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1908,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "1179:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1096:99:24"
            },
            "payable": false,
            "returnParameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:24"
            },
            "scope": 1943,
            "src": "1072:436:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1941,
              "nodeType": "Block",
              "src": "1576:44:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1589:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SampleCrowdsaleToken_$1892_$",
                        "typeString": "function () returns (contract SampleCrowdsaleToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1937,
                        "name": "SampleCrowdsaleToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1892,
                        "src": "1593:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1892",
                          "typeString": "contract SampleCrowdsaleToken"
                        }
                      }
                    },
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1892",
                      "typeString": "contract SampleCrowdsaleToken"
                    }
                  },
                  "functionReturnParameters": 1936,
                  "id": 1940,
                  "nodeType": "Return",
                  "src": "1582:33:24"
                }
              ]
            },
            "documentation": null,
            "id": 1942,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTokenContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:24"
            },
            "payable": false,
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1935,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1942,
                  "src": "1561:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$3053",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1934,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3053,
                    "src": "1561:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$3053",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:15:24"
            },
            "scope": 1943,
            "src": "1512:108:24",
            "stateMutability": "nonpayable",
            "superFunction": 1441,
            "visibility": "internal"
          }
        ],
        "scope": 1944,
        "src": "1002:621:24"
      }
    ],
    "src": "0:1624:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-09-20T21:39:24.015Z",
  "devdoc": {
    "methods": {
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "SampleCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}