{
  "contractName": "CanReclaimToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"SylTi\\r\",\"methods\":{\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\\r\",\"params\":{\"token\":\"ERC20Basic The address of the token contract\\r\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Contracts that should be able to recover tokens\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/CanReclaimToken.sol\":\"CanReclaimToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0xb528b2842462f9d3aee0bde457ff3d30e373cf78935c1a7e3727b16dad75856e\",\"urls\":[\"bzzr://4b257cbe950d5d440fe60b5067d698ebd12a58f304ae0956093a8b540d965ced\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x121061e0cd5da8776179b3bedc5844e8c9f79ef33c5f5c0e958fbd6d4fc3670c\",\"urls\":[\"bzzr://846540111c4d0e4ad95bf72201d1802ab337724ab718174ed047536100d972d4\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/ERC20.sol\":{\"keccak256\":\"0xbd3c05c3f208392ef3b629c809cc3ea564c64f11541c96380f4e731964b9009c\",\"urls\":[\"bzzr://8a9c5ba9c614eb7b7bc019497c027f2e12ee4c18869940f74c617160758224c5\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/ERC20Basic.sol\":{\"keccak256\":\"0x2d8956ad12279d1510bcc84bc58b6ef6f85d57aafc10ec19d5aff56cef443e06\",\"urls\":[\"bzzr://e3e97d5b6a2417e26d6fe3fbd8aebe05dcc0c380938c9c3f6763104400d83f6e\"]},\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/SafeERC20.sol\":{\"keccak256\":\"0x6bc5ee7b210b36f4dd5ddf7fd8610d494aef80daf99760695ad1c6ffe7d7e9d3\",\"urls\":[\"bzzr://1051683e4d6d222f58949a76f3c68ded92f5e79c48482796ef979a40c0b28349\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061054f806100536000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc3201461005c5780638da5cb5b1461009f578063f2fde38b146100f6575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610139565b005b3480156100ab57600080fd5b506100b46102be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010257600080fd5b50610137600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e3565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561019657600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b505050506040513d602081101561025b57600080fd5b810190808051906020019092919050505090506102ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166104389092919063ffffffff16565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561037a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156104db57600080fd5b505af11580156104ef573d6000803e3d6000fd5b505050506040513d602081101561050557600080fd5b8101908080519060200190929190505050151561051e57fe5b5050505600a165627a7a7230582010918f84647b13c80834fe383852dd356cf82142ccd65f8eed30e2091a705f290029",
  "deployedBytecode": "0x608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc3201461005c5780638da5cb5b1461009f578063f2fde38b146100f6575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610139565b005b3480156100ab57600080fd5b506100b46102be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010257600080fd5b50610137600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e3565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561019657600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b505050506040513d602081101561025b57600080fd5b810190808051906020019092919050505090506102ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166104389092919063ffffffff16565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561037a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156104db57600080fd5b505af11580156104ef573d6000803e3d6000fd5b505050506040513d602081101561050557600080fd5b8101908080519060200190929190505050151561051e57fe5b5050505600a165627a7a7230582010918f84647b13c80834fe383852dd356cf82142ccd65f8eed30e2091a705f290029",
  "sourceMap": "396:365:33:-;;;522:10:40;514:5;;:18;;;;;;;;;;;;;;;;;;396:365:33;;;;;;",
  "deployedSourceMap": "396:365:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:152:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:20:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:20:40;;;;;;;;;;;;;;;;;;;;;;;;;;;864:173;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:173:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:152:33;670:15;675:5:40;;;;;;;;;;;661:19;;:10;:19;;;653:28;;;;;;;;688:5:33;:15;;;704:4;688:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:21:33;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;688:21:33;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;688:21:33;;;;;;;;;;;;;;;;670:39;;716:34;735:5;;;;;;;;;;;742:7;716:5;:18;;;;:34;;;;;:::i;:::-;604:152;;:::o;247:20:40:-;;;;;;;;;;;;;:::o;864:173::-;675:5;;;;;;;;;;;661:19;;:10;:19;;;653:28;;;;;;;;961:1;941:22;;:8;:22;;;;933:31;;;;;;;;999:8;971:37;;992:5;;;;;;;;;;;971:37;;;;;;;;;;;;1023:8;1015:5;;:16;;;;;;;;;;;;;;;;;;864:173;:::o;379:122:49:-;469:5;:14;;;484:2;488:5;469:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:25:49;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;469:25:49;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;469:25:49;;;;;;;;;;;;;;;;462:33;;;;;;379:122;;;:::o",
  "source": "pragma solidity ^0.4.11;\r\n\r\nimport \"./Ownable.sol\";\r\nimport \"../token/ERC20Basic.sol\";\r\nimport \"../token/SafeERC20.sol\";\r\n\r\n/**\r\n * @title Contracts that should be able to recover tokens\r\n * @author SylTi\r\n * @dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\r\n * This will prevent any accidental loss of tokens.\r\n */\r\ncontract CanReclaimToken is Ownable {\r\n  using SafeERC20 for ERC20Basic;\r\n\r\n  /**\r\n   * @dev Reclaim all ERC20Basic compatible tokens\r\n   * @param token ERC20Basic The address of the token contract\r\n   */\r\n  function reclaimToken(ERC20Basic token) external onlyOwner {\r\n    uint256 balance = token.balanceOf(this);\r\n    token.safeTransfer(owner, balance);\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "c:\\UNICEF\\dev\\connect-bc\\bids-api\\blockchain\\contracts\\openzeppelin-solidity\\contracts\\ownership\\CanReclaimToken.sol",
  "ast": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        2551
      ]
    },
    "id": 2552,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2520,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2521,
        "nodeType": "ImportDirective",
        "scope": 2552,
        "sourceUnit": 2770,
        "src": "28:23:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/ERC20Basic.sol",
        "file": "../token/ERC20Basic.sol",
        "id": 2522,
        "nodeType": "ImportDirective",
        "scope": 2552,
        "sourceUnit": 3058,
        "src": "53:33:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/SafeERC20.sol",
        "file": "../token/SafeERC20.sol",
        "id": 2523,
        "nodeType": "ImportDirective",
        "scope": 2552,
        "sourceUnit": 3396,
        "src": "88:32:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2524,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2769,
              "src": "424:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2769",
                "typeString": "contract Ownable"
              }
            },
            "id": 2525,
            "nodeType": "InheritanceSpecifier",
            "src": "424:7:33"
          }
        ],
        "contractDependencies": [
          2769
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\r\n@author SylTi\r\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\r\nThis will prevent any accidental loss of tokens.\r",
        "fullyImplemented": true,
        "id": 2551,
        "linearizedBaseContracts": [
          2551,
          2769
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2528,
            "libraryName": {
              "contractScope": null,
              "id": 2526,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3395,
              "src": "443:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3395",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "437:31:33",
            "typeName": {
              "contractScope": null,
              "id": 2527,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3057,
              "src": "457:10:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 2549,
              "nodeType": "Block",
              "src": "663:93:33",
              "statements": [
                {
                  "assignments": [
                    2536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2536,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "670:15:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2535,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2541,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2539,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6582,
                        "src": "704:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2551",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2551",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2537,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2530,
                        "src": "688:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3039,
                      "src": "688:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:39:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2545,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2717,
                        "src": "735:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2546,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2536,
                        "src": "742:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2542,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2530,
                        "src": "716:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3355,
                      "src": "716:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$3057_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$3057_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 2547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:34:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2548,
                  "nodeType": "ExpressionStatement",
                  "src": "716:34:33"
                }
              ]
            },
            "documentation": "@dev Reclaim all ERC20Basic compatible tokens\r\n@param token ERC20Basic The address of the token contract\r",
            "id": 2550,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2533,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2532,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2743,
                  "src": "653:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "653:9:33"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2530,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2550,
                  "src": "626:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2529,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3057,
                    "src": "626:10:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "625:18:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 2534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:33"
            },
            "scope": 2551,
            "src": "604:152:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2552,
        "src": "396:365:33"
      }
    ],
    "src": "0:763:33"
  },
  "legacyAST": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        2551
      ]
    },
    "id": 2552,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2520,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2521,
        "nodeType": "ImportDirective",
        "scope": 2552,
        "sourceUnit": 2770,
        "src": "28:23:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/ERC20Basic.sol",
        "file": "../token/ERC20Basic.sol",
        "id": 2522,
        "nodeType": "ImportDirective",
        "scope": 2552,
        "sourceUnit": 3058,
        "src": "53:33:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/token/SafeERC20.sol",
        "file": "../token/SafeERC20.sol",
        "id": 2523,
        "nodeType": "ImportDirective",
        "scope": 2552,
        "sourceUnit": 3396,
        "src": "88:32:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2524,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2769,
              "src": "424:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2769",
                "typeString": "contract Ownable"
              }
            },
            "id": 2525,
            "nodeType": "InheritanceSpecifier",
            "src": "424:7:33"
          }
        ],
        "contractDependencies": [
          2769
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\r\n@author SylTi\r\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\r\nThis will prevent any accidental loss of tokens.\r",
        "fullyImplemented": true,
        "id": 2551,
        "linearizedBaseContracts": [
          2551,
          2769
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2528,
            "libraryName": {
              "contractScope": null,
              "id": 2526,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3395,
              "src": "443:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3395",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "437:31:33",
            "typeName": {
              "contractScope": null,
              "id": 2527,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3057,
              "src": "457:10:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 2549,
              "nodeType": "Block",
              "src": "663:93:33",
              "statements": [
                {
                  "assignments": [
                    2536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2536,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "670:15:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2535,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2541,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2539,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6582,
                        "src": "704:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2551",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$2551",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2537,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2530,
                        "src": "688:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3039,
                      "src": "688:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:39:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2545,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2717,
                        "src": "735:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2546,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2536,
                        "src": "742:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2542,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2530,
                        "src": "716:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 2544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3355,
                      "src": "716:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$3057_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$3057_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 2547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:34:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2548,
                  "nodeType": "ExpressionStatement",
                  "src": "716:34:33"
                }
              ]
            },
            "documentation": "@dev Reclaim all ERC20Basic compatible tokens\r\n@param token ERC20Basic The address of the token contract\r",
            "id": 2550,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2533,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2532,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2743,
                  "src": "653:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "653:9:33"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2530,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2550,
                  "src": "626:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2529,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3057,
                    "src": "626:10:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$3057",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "625:18:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 2534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:33"
            },
            "scope": 2551,
            "src": "604:152:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2552,
        "src": "396:365:33"
      }
    ],
    "src": "0:763:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-28T17:42:08.630Z",
  "devdoc": {
    "author": "SylTi\r",
    "methods": {
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens\r",
        "params": {
          "token": "ERC20Basic The address of the token contract\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      }
    },
    "title": "Contracts that should be able to recover tokens\r"
  },
  "userdoc": {
    "methods": {}
  }
}