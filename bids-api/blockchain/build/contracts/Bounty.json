{
  "contractName": "Bounty",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalPayments",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "researchers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawPayments",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "claimed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "destroyAndSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "createdAddress",
          "type": "address"
        }
      ],
      "name": "TargetCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createTarget",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.11;\r\n\r\n\r\nimport './payment/PullPayment.sol';\r\nimport './lifecycle/Destructible.sol';\r\n\r\n\r\n/**\r\n * @title Bounty\r\n * @dev This bounty will pay out to a researcher if they break invariant logic of the contract.\r\n */\r\ncontract Bounty is PullPayment, Destructible {\r\n  bool public claimed;\r\n  mapping(address => address) public researchers;\r\n\r\n  event TargetCreated(address createdAddress);\r\n\r\n  /**\r\n   * @dev Fallback function allowing the contract to receive funds, if they haven't already been claimed.\r\n   */\r\n  function() payable {\r\n    require(!claimed);\r\n  }\r\n\r\n  /**\r\n   * @dev Create and deploy the target contract (extension of Target contract), and sets the\r\n   * msg.sender as a researcher\r\n   * @return A target contract\r\n   */\r\n  function createTarget() public returns(Target) {\r\n    Target target = Target(deployContract());\r\n    researchers[target] = msg.sender;\r\n    TargetCreated(target);\r\n    return target;\r\n  }\r\n\r\n  /**\r\n   * @dev Internal function to deploy the target contract.\r\n   * @return A target contract address\r\n   */\r\n  function deployContract() internal returns(address);\r\n\r\n  /**\r\n   * @dev Sends the contract funds to the researcher that proved the contract is broken.\r\n   * @param target contract\r\n   */\r\n  function claim(Target target) public {\r\n    address researcher = researchers[target];\r\n    require(researcher != 0);\r\n    // Check Target contract invariants\r\n    require(!target.checkInvariant());\r\n    asyncSend(researcher, this.balance);\r\n    claimed = true;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Target\r\n * @dev Your main contract should inherit from this class and implement the checkInvariant method.\r\n */\r\ncontract Target {\r\n\r\n   /**\r\n    * @dev Checks all values a contract assumes to be true all the time. If this function returns\r\n    * false, the contract is broken in some way and is in an inconsistent state.\r\n    * In order to win the bounty, security researchers will try to cause this broken state.\r\n    * @return True if all invariant values are correct, false otherwise.\r\n    */\r\n  function checkInvariant() public returns(bool);\r\n}\r\n",
  "sourcePath": "c:\\UNICEF\\dev\\connect-bc\\bids-api\\blockchain\\contracts\\openzeppelin-solidity\\contracts\\Bounty.sol",
  "ast": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/Bounty.sol",
    "exportedSymbols": {
      "Bounty": [
        1157
      ],
      "Target": [
        1163
      ]
    },
    "id": 1164,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1065,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:14"
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/payment/PullPayment.sol",
        "file": "./payment/PullPayment.sol",
        "id": 1066,
        "nodeType": "ImportDirective",
        "scope": 1164,
        "sourceUnit": 2857,
        "src": "30:35:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/lifecycle/Destructible.sol",
        "file": "./lifecycle/Destructible.sol",
        "id": 1067,
        "nodeType": "ImportDirective",
        "scope": 1164,
        "sourceUnit": 2194,
        "src": "67:38:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1068,
              "name": "PullPayment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2856,
              "src": "255:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PullPayment_$2856",
                "typeString": "contract PullPayment"
              }
            },
            "id": 1069,
            "nodeType": "InheritanceSpecifier",
            "src": "255:11:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1070,
              "name": "Destructible",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2193,
              "src": "268:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destructible_$2193",
                "typeString": "contract Destructible"
              }
            },
            "id": 1071,
            "nodeType": "InheritanceSpecifier",
            "src": "268:12:14"
          }
        ],
        "contractDependencies": [
          2193,
          2769,
          2856
        ],
        "contractKind": "contract",
        "documentation": "@title Bounty\r\n@dev This bounty will pay out to a researcher if they break invariant logic of the contract.\r",
        "fullyImplemented": false,
        "id": 1157,
        "linearizedBaseContracts": [
          1157,
          2193,
          2769,
          2856
        ],
        "name": "Bounty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1073,
            "name": "claimed",
            "nodeType": "VariableDeclaration",
            "scope": 1157,
            "src": "286:19:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1072,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "286:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1077,
            "name": "researchers",
            "nodeType": "VariableDeclaration",
            "scope": 1157,
            "src": "310:46:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1076,
              "keyType": {
                "id": 1074,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "318:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "310:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1075,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "329:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1081,
            "name": "TargetCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "indexed": false,
                  "name": "createdAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "383:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "382:24:14"
            },
            "src": "363:44:14"
          },
          {
            "body": {
              "id": 1089,
              "nodeType": "Block",
              "src": "553:30:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "568:8:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1085,
                          "name": "claimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "569:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "560:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
                  "src": "560:17:14"
                }
              ]
            },
            "documentation": "@dev Fallback function allowing the contract to receive funds, if they haven't already been claimed.\r",
            "id": 1090,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:2:14"
            },
            "payable": true,
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:14"
            },
            "scope": 1157,
            "src": "534:49:14",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1115,
              "nodeType": "Block",
              "src": "809:140:14",
              "statements": [
                {
                  "assignments": [
                    1096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1096,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "816:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Target_$1163",
                        "typeString": "contract Target"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1095,
                        "name": "Target",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1163,
                        "src": "816:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1101,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1098,
                          "name": "deployContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "839:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "839:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1097,
                      "name": "Target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "832:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Target_$1163_$",
                        "typeString": "type(contract Target)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "816:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1102,
                        "name": "researchers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "863:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1104,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1103,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "875:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "863:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1105,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6555,
                        "src": "885:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "885:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "863:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "863:32:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1110,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "916:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      ],
                      "id": 1109,
                      "name": "TargetCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "902:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "902:21:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1113,
                    "name": "target",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1096,
                    "src": "937:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "functionReturnParameters": 1094,
                  "id": 1114,
                  "nodeType": "Return",
                  "src": "930:13:14"
                }
              ]
            },
            "documentation": "@dev Create and deploy the target contract (extension of Target contract), and sets the\r\nmsg.sender as a researcher\r\n@return A target contract\r",
            "id": 1116,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "801:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Target_$1163",
                    "typeString": "contract Target"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1092,
                    "name": "Target",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1163,
                    "src": "801:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "800:8:14"
            },
            "scope": 1157,
            "src": "762:187:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to deploy the target contract.\r\n@return A target contract address\r",
            "id": 1121,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deployContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1121,
                  "src": "1112:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1111:9:14"
            },
            "scope": 1157,
            "src": "1069:52:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "1297:228:14",
              "statements": [
                {
                  "assignments": [
                    1127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1127,
                      "name": "researcher",
                      "nodeType": "VariableDeclaration",
                      "scope": 1156,
                      "src": "1304:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1126,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1304:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1131,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1128,
                      "name": "researchers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "1325:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1130,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1129,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "1337:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Target_$1163",
                        "typeString": "contract Target"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1325:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1304:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1133,
                          "name": "researcher",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1127,
                          "src": "1359:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1373:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1359:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "1351:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:24:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1431:24:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1123,
                              "src": "1432:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Target_$1163",
                                "typeString": "contract Target"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkInvariant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1162,
                            "src": "1432:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () external returns (bool)"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "1423:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1423:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1146,
                        "name": "researcher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "1473:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6642,
                          "src": "1485:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Bounty_$1157",
                            "typeString": "contract Bounty"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1485:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1145,
                      "name": "asyncSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2807,
                      "src": "1463:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1151,
                      "name": "claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "1505:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1515:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1505:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:14:14"
                }
              ]
            },
            "documentation": "@dev Sends the contract funds to the researcher that proved the contract is broken.\r\n@param target contract\r",
            "id": 1156,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1123,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "1275:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Target_$1163",
                    "typeString": "contract Target"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1122,
                    "name": "Target",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1163,
                    "src": "1275:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1274:15:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1297:0:14"
            },
            "scope": 1157,
            "src": "1260:265:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1164,
        "src": "236:1294:14"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Target\r\n@dev Your main contract should inherit from this class and implement the checkInvariant method.\r",
        "fullyImplemented": false,
        "id": 1163,
        "linearizedBaseContracts": [
          1163
        ],
        "name": "Target",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Checks all values a contract assumes to be true all the time. If this function returns\r\nfalse, the contract is broken in some way and is in an inconsistent state.\r\nIn order to win the bounty, security researchers will try to cause this broken state.\r\n@return True if all invariant values are correct, false otherwise.\r",
            "id": 1162,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkInvariant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "2092:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:6:14"
            },
            "scope": 1163,
            "src": "2051:47:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1164,
        "src": "1664:437:14"
      }
    ],
    "src": "0:2103:14"
  },
  "legacyAST": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/Bounty.sol",
    "exportedSymbols": {
      "Bounty": [
        1157
      ],
      "Target": [
        1163
      ]
    },
    "id": 1164,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1065,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:14"
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/payment/PullPayment.sol",
        "file": "./payment/PullPayment.sol",
        "id": 1066,
        "nodeType": "ImportDirective",
        "scope": 1164,
        "sourceUnit": 2857,
        "src": "30:35:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/lifecycle/Destructible.sol",
        "file": "./lifecycle/Destructible.sol",
        "id": 1067,
        "nodeType": "ImportDirective",
        "scope": 1164,
        "sourceUnit": 2194,
        "src": "67:38:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1068,
              "name": "PullPayment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2856,
              "src": "255:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PullPayment_$2856",
                "typeString": "contract PullPayment"
              }
            },
            "id": 1069,
            "nodeType": "InheritanceSpecifier",
            "src": "255:11:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1070,
              "name": "Destructible",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2193,
              "src": "268:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destructible_$2193",
                "typeString": "contract Destructible"
              }
            },
            "id": 1071,
            "nodeType": "InheritanceSpecifier",
            "src": "268:12:14"
          }
        ],
        "contractDependencies": [
          2193,
          2769,
          2856
        ],
        "contractKind": "contract",
        "documentation": "@title Bounty\r\n@dev This bounty will pay out to a researcher if they break invariant logic of the contract.\r",
        "fullyImplemented": false,
        "id": 1157,
        "linearizedBaseContracts": [
          1157,
          2193,
          2769,
          2856
        ],
        "name": "Bounty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1073,
            "name": "claimed",
            "nodeType": "VariableDeclaration",
            "scope": 1157,
            "src": "286:19:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1072,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "286:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1077,
            "name": "researchers",
            "nodeType": "VariableDeclaration",
            "scope": 1157,
            "src": "310:46:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1076,
              "keyType": {
                "id": 1074,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "318:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "310:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1075,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "329:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1081,
            "name": "TargetCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "indexed": false,
                  "name": "createdAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "383:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "382:24:14"
            },
            "src": "363:44:14"
          },
          {
            "body": {
              "id": 1089,
              "nodeType": "Block",
              "src": "553:30:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "568:8:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1085,
                          "name": "claimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "569:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "560:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
                  "src": "560:17:14"
                }
              ]
            },
            "documentation": "@dev Fallback function allowing the contract to receive funds, if they haven't already been claimed.\r",
            "id": 1090,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:2:14"
            },
            "payable": true,
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:14"
            },
            "scope": 1157,
            "src": "534:49:14",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1115,
              "nodeType": "Block",
              "src": "809:140:14",
              "statements": [
                {
                  "assignments": [
                    1096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1096,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "816:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Target_$1163",
                        "typeString": "contract Target"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1095,
                        "name": "Target",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1163,
                        "src": "816:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1101,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1098,
                          "name": "deployContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "839:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "839:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1097,
                      "name": "Target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "832:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Target_$1163_$",
                        "typeString": "type(contract Target)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "816:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1102,
                        "name": "researchers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "863:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1104,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1103,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "875:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "863:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1105,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6555,
                        "src": "885:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "885:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "863:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "863:32:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1110,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "916:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Target_$1163",
                          "typeString": "contract Target"
                        }
                      ],
                      "id": 1109,
                      "name": "TargetCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "902:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "902:21:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1113,
                    "name": "target",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1096,
                    "src": "937:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "functionReturnParameters": 1094,
                  "id": 1114,
                  "nodeType": "Return",
                  "src": "930:13:14"
                }
              ]
            },
            "documentation": "@dev Create and deploy the target contract (extension of Target contract), and sets the\r\nmsg.sender as a researcher\r\n@return A target contract\r",
            "id": 1116,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "801:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Target_$1163",
                    "typeString": "contract Target"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1092,
                    "name": "Target",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1163,
                    "src": "801:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "800:8:14"
            },
            "scope": 1157,
            "src": "762:187:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to deploy the target contract.\r\n@return A target contract address\r",
            "id": 1121,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deployContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1121,
                  "src": "1112:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1111:9:14"
            },
            "scope": 1157,
            "src": "1069:52:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "1297:228:14",
              "statements": [
                {
                  "assignments": [
                    1127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1127,
                      "name": "researcher",
                      "nodeType": "VariableDeclaration",
                      "scope": 1156,
                      "src": "1304:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1126,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1304:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1131,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1128,
                      "name": "researchers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "1325:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1130,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1129,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "1337:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Target_$1163",
                        "typeString": "contract Target"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1325:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1304:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1133,
                          "name": "researcher",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1127,
                          "src": "1359:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1373:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1359:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "1351:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:24:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1431:24:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1123,
                              "src": "1432:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Target_$1163",
                                "typeString": "contract Target"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkInvariant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1162,
                            "src": "1432:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () external returns (bool)"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "1423:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1423:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1146,
                        "name": "researcher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "1473:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6642,
                          "src": "1485:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Bounty_$1157",
                            "typeString": "contract Bounty"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1485:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1145,
                      "name": "asyncSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2807,
                      "src": "1463:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1151,
                      "name": "claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "1505:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1515:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1505:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:14:14"
                }
              ]
            },
            "documentation": "@dev Sends the contract funds to the researcher that proved the contract is broken.\r\n@param target contract\r",
            "id": 1156,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1123,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "1275:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Target_$1163",
                    "typeString": "contract Target"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1122,
                    "name": "Target",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1163,
                    "src": "1275:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Target_$1163",
                      "typeString": "contract Target"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1274:15:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1297:0:14"
            },
            "scope": 1157,
            "src": "1260:265:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1164,
        "src": "236:1294:14"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Target\r\n@dev Your main contract should inherit from this class and implement the checkInvariant method.\r",
        "fullyImplemented": false,
        "id": 1163,
        "linearizedBaseContracts": [
          1163
        ],
        "name": "Target",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Checks all values a contract assumes to be true all the time. If this function returns\r\nfalse, the contract is broken in some way and is in an inconsistent state.\r\nIn order to win the bounty, security researchers will try to cause this broken state.\r\n@return True if all invariant values are correct, false otherwise.\r",
            "id": 1162,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "checkInvariant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 1161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "2092:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:6:14"
            },
            "scope": 1163,
            "src": "2051:47:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1164,
        "src": "1664:437:14"
      }
    ],
    "src": "0:2103:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-28T17:42:08.546Z",
  "devdoc": {
    "methods": {
      "claim(address)": {
        "details": "Sends the contract funds to the researcher that proved the contract is broken.\r",
        "params": {
          "target": "contract\r"
        }
      },
      "createTarget()": {
        "details": "Create and deploy the target contract (extension of Target contract), and sets the\r msg.sender as a researcher\r",
        "return": "A target contract\r"
      },
      "destroy()": {
        "details": "Transfers the current balance to the owner and terminates the contract.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "withdrawPayments()": {
        "details": "withdraw accumulated balance, called by payee.\r"
      }
    },
    "title": "Bounty\r"
  },
  "userdoc": {
    "methods": {}
  }
}