{
  "contractName": "LimitBalance",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "limit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"limit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_limit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{},\"title\":\"LimitBalance\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/LimitBalance.sol\":\"LimitBalance\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/LimitBalance.sol\":{\"keccak256\":\"0x50d0c7be9571194a8acd32196bea1c83244e0f159bde05bc5c3e5243827a9dce\",\"urls\":[\"bzzr://8cb26f731d514bb0bc752a35ec3a0670dae1b993b5b62ad642a0dc5c413bb85c\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806100e7833981018060405281019080805190602001909291905050508060008190555050609e806100496000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a4d66daf146044575b600080fd5b348015604f57600080fd5b506056606c565b6040518082815260200191505060405180910390f35b600054815600a165627a7a723058204e95973f201ac96748345144fff7f5b021fd7086950573ead4b0686d052b30490029",
  "deployedBytecode": "0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a4d66daf146044575b600080fd5b348015604f57600080fd5b506056606c565b6040518082815260200191505060405180910390f35b600054815600a165627a7a723058204e95973f201ac96748345144fff7f5b021fd7086950573ead4b0686d052b30490029",
  "sourceMap": "354:415:17:-;;;538:65;8:9:-1;5:2;;;30:1;27;20:12;5:2;538:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:6;583:5;:14;;;;538:65;354:415;;;;;;",
  "deployedSourceMap": "354:415:17:-;;;;;;;;;;;;;;;;;;;;;;;;383:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:20:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.11;\r\n\r\n\r\n/**\r\n * @title LimitBalance\r\n * @dev Simple contract to limit the balance of child contract.\r\n * @dev Note this doesn't prevent other contracts to send funds by using selfdestruct(address);\r\n * @dev See: https://github.com/ConsenSys/smart-contract-best-practices#remember-that-ether-can-be-forcibly-sent-to-an-account\r\n */\r\ncontract LimitBalance {\r\n\r\n  uint256 public limit;\r\n\r\n  /**\r\n   * @dev Constructor that sets the passed value as a limit.\r\n   * @param _limit uint256 to represent the limit.\r\n   */\r\n  function LimitBalance(uint256 _limit) {\r\n    limit = _limit;\r\n  }\r\n\r\n  /**\r\n   * @dev Checks if limit was reached. Case true, it throws.\r\n   */\r\n  modifier limitedPayable() {\r\n    require(this.balance <= limit);\r\n    _;\r\n\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "c:\\UNICEF\\dev\\connect-bc\\bids-api\\blockchain\\contracts\\openzeppelin-solidity\\contracts\\LimitBalance.sol",
  "ast": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/LimitBalance.sol",
    "exportedSymbols": {
      "LimitBalance": [
        1362
      ]
    },
    "id": 1363,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1338,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title LimitBalance\r\n@dev Simple contract to limit the balance of child contract.\r\n@dev Note this doesn't prevent other contracts to send funds by using selfdestruct(address);\r\n@dev See: https://github.com/ConsenSys/smart-contract-best-practices#remember-that-ether-can-be-forcibly-sent-to-an-account\r",
        "fullyImplemented": true,
        "id": 1362,
        "linearizedBaseContracts": [
          1362
        ],
        "name": "LimitBalance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1340,
            "name": "limit",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "383:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1339,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "383:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1349,
              "nodeType": "Block",
              "src": "576:27:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1345,
                      "name": "limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "583:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1346,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "591:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "583:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "583:14:17"
                }
              ]
            },
            "documentation": "@dev Constructor that sets the passed value as a limit.\r\n@param _limit uint256 to represent the limit.\r",
            "id": 1350,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "LimitBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "560:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "559:16:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:17"
            },
            "scope": 1362,
            "src": "538:65:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "711:53:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1353,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6650,
                            "src": "726:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LimitBalance_$1362",
                              "typeString": "contract LimitBalance"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "726:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1355,
                          "name": "limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "742:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "726:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "718:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "718:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "718:30:17"
                },
                {
                  "id": 1359,
                  "nodeType": "PlaceholderStatement",
                  "src": "755:1:17"
                }
              ]
            },
            "documentation": "@dev Checks if limit was reached. Case true, it throws.\r",
            "id": 1361,
            "name": "limitedPayable",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:2:17"
            },
            "src": "685:79:17",
            "visibility": "internal"
          }
        ],
        "scope": 1363,
        "src": "354:415:17"
      }
    ],
    "src": "0:771:17"
  },
  "legacyAST": {
    "absolutePath": "/c/UNICEF/dev/connect-bc/bids-api/blockchain/contracts/openzeppelin-solidity/contracts/LimitBalance.sol",
    "exportedSymbols": {
      "LimitBalance": [
        1362
      ]
    },
    "id": 1363,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1338,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title LimitBalance\r\n@dev Simple contract to limit the balance of child contract.\r\n@dev Note this doesn't prevent other contracts to send funds by using selfdestruct(address);\r\n@dev See: https://github.com/ConsenSys/smart-contract-best-practices#remember-that-ether-can-be-forcibly-sent-to-an-account\r",
        "fullyImplemented": true,
        "id": 1362,
        "linearizedBaseContracts": [
          1362
        ],
        "name": "LimitBalance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1340,
            "name": "limit",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "383:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1339,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "383:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1349,
              "nodeType": "Block",
              "src": "576:27:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1345,
                      "name": "limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "583:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1346,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "591:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "583:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "583:14:17"
                }
              ]
            },
            "documentation": "@dev Constructor that sets the passed value as a limit.\r\n@param _limit uint256 to represent the limit.\r",
            "id": 1350,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "LimitBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "560:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "559:16:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:17"
            },
            "scope": 1362,
            "src": "538:65:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "711:53:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1353,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6650,
                            "src": "726:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LimitBalance_$1362",
                              "typeString": "contract LimitBalance"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "726:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1355,
                          "name": "limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "742:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "726:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6558,
                        6559
                      ],
                      "referencedDeclaration": 6558,
                      "src": "718:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "718:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "718:30:17"
                },
                {
                  "id": 1359,
                  "nodeType": "PlaceholderStatement",
                  "src": "755:1:17"
                }
              ]
            },
            "documentation": "@dev Checks if limit was reached. Case true, it throws.\r",
            "id": 1361,
            "name": "limitedPayable",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:2:17"
            },
            "src": "685:79:17",
            "visibility": "internal"
          }
        ],
        "scope": 1363,
        "src": "354:415:17"
      }
    ],
    "src": "0:771:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-28T17:42:08.562Z",
  "devdoc": {
    "methods": {},
    "title": "LimitBalance\r"
  },
  "userdoc": {
    "methods": {}
  }
}